{"version":3,"file":"static/js/860.658ff5ed.chunk.js","mappings":"8PAGaA,GAAgBC,EAAAA,EAAAA,IAAOC,EAAAA,KAAPD,CAAYE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,wGAQ5BC,EAAaJ,EAAAA,GAAAA,OAAaK,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,6F,+DCRvCG,EAGIC,EAAQ,KAFVR,EAAaO,EAAbP,cACAK,EAAUE,EAAVF,WAEFI,EAA0BD,EAAQ,MAA1BE,EAAMD,EAANC,OAAQC,EAAKF,EAALE,MA2ChB,UAzCiB,WACf,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,OACEC,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAACJ,EAAM,CACLM,cAAe,CACbC,KAAM,GACNC,MAAO,GACPC,SAAU,IAEZC,SAAU,SAACC,EAAQC,GAEC,KAAhBD,EAAOJ,MACU,KAAjBI,EAAOH,OACa,KAApBG,EAAOF,UAMTP,GAASW,EAAAA,EAAAA,IAAaF,IACtBC,EAAQE,aALNC,MAAM,yBAMV,EAAEV,UAEFW,EAAAA,EAAAA,MAAC1B,EAAa,CAAAe,SAAA,EACZD,EAAAA,EAAAA,KAAA,SAAOa,QAAQ,OAAMZ,SAAC,UACtBD,EAAAA,EAAAA,KAACH,EAAK,CAACiB,GAAG,OAAOX,KAAK,OAAOY,YAAY,UAEzCf,EAAAA,EAAAA,KAAA,SAAOa,QAAQ,QAAOZ,SAAC,WACvBD,EAAAA,EAAAA,KAACH,EAAK,CAACiB,GAAG,QAAQX,KAAK,QAAQY,YAAY,oBAE3Cf,EAAAA,EAAAA,KAAA,SAAOa,QAAQ,WAAUZ,SAAC,cAC1BD,EAAAA,EAAAA,KAACH,EAAK,CAACiB,GAAG,WAAWX,KAAK,WAAWY,YAAY,aAEjDf,EAAAA,EAAAA,KAACT,EAAU,CAACyB,KAAK,SAAQf,SAAC,sBAKpC,C","sources":["components/Contactform/Contactform.styles.js","components/Register/Register.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Form } from 'formik';\n\nexport const FormContainer = styled(Form)`\n  padding: 20px;\n  width: 300px;\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n\nexport const FormButton = styled.button`\n  background-color: #33ff33;\n  box-shadow: inset 0px 0px 10px rgba(0, 0, 0, 0.9);\n`;\n","import { toCreateUser } from 'components/toGetApi/toGetApi';\nimport { useDispatch } from 'react-redux';\n\nconst {\n  FormContainer,\n  FormButton,\n} = require('components/Contactform/Contactform.styles');\nconst { Formik, Field } = require('formik');\n\nconst Register = () => {\n  const dispatch = useDispatch();\n  return (\n    <div>\n      <Formik\n        initialValues={{\n          name: '',\n          email: '',\n          password: '',\n        }}\n        onSubmit={(values, actions) => {\n          if (\n            values.name === '' ||\n            values.email === '' ||\n            values.password === ''\n          ) {\n            alert(`There are empty fields`);\n            return;\n          }\n\n          dispatch(toCreateUser(values));\n          actions.resetForm();\n        }}\n      >\n        <FormContainer>\n          <label htmlFor=\"name\">Name</label>\n          <Field id=\"name\" name=\"name\" placeholder=\"Name\" />\n\n          <label htmlFor=\"email\">Email</label>\n          <Field id=\"email\" name=\"email\" placeholder=\"ffff@gmail.com\" />\n\n          <label htmlFor=\"password\">Password</label>\n          <Field id=\"password\" name=\"password\" placeholder=\"*******\" />\n\n          <FormButton type=\"submit\">To register</FormButton>\n        </FormContainer>\n      </Formik>\n    </div>\n  );\n};\n\nexport default Register;\n"],"names":["FormContainer","styled","Form","_templateObject","_taggedTemplateLiteral","FormButton","_templateObject2","_require","require","_require2","Formik","Field","dispatch","useDispatch","_jsx","children","initialValues","name","email","password","onSubmit","values","actions","toCreateUser","resetForm","alert","_jsxs","htmlFor","id","placeholder","type"],"sourceRoot":""}