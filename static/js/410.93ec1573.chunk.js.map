{"version":3,"file":"static/js/410.93ec1573.chunk.js","mappings":"4MAkDA,UA5CoB,WAClB,IAAMA,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,SAASG,KAAK,IACpDC,GAAWC,EAAAA,EAAAA,MAEjB,OACEC,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAACE,EAAAA,OAAM,CACLC,cAAe,CACbC,KAAM,GACNC,OAAQ,IAEVC,SAAU,SAACC,EAAQC,GACjB,IAAMC,EAAQf,EAASgB,KAAI,SAAAC,GAAO,OAAIA,EAAQP,KAAKQ,aAAa,IAC1DC,EAAYN,EAAOH,KAErBK,EAAMK,MAAK,SAAAV,GAAI,OAAIA,IAASS,EAAUD,aAAa,IACrDG,MAAM,GAADC,OAAIT,EAAOH,KAAI,4BAIF,KAAhBG,EAAOH,MAAiC,KAAlBG,EAAOF,QAIjCY,QAAQC,IAAIX,GACZf,GAAS2B,EAAAA,EAAAA,IAAWZ,IACpBC,EAAQY,YACRtB,EAAS,cANPiB,MAAM,yBAOV,EAAEd,UAEFoB,EAAAA,EAAAA,MAACC,EAAAA,cAAa,CAAArB,SAAA,EACZD,EAAAA,EAAAA,KAAA,SAAOuB,QAAQ,OAAMtB,SAAC,UACtBD,EAAAA,EAAAA,KAACwB,EAAAA,MAAK,CAACC,GAAG,OAAOrB,KAAK,OAAOsB,YAAY,UAEzC1B,EAAAA,EAAAA,KAAA,SAAOuB,QAAQ,SAAQtB,SAAC,YACxBD,EAAAA,EAAAA,KAACwB,EAAAA,MAAK,CAACC,GAAG,SAASrB,KAAK,SAASsB,YAAY,eAE7C1B,EAAAA,EAAAA,KAAC2B,EAAAA,WAAU,CAACC,KAAK,SAAQ3B,SAAC,sBAKpC,C,8IC9CaqB,GAAgBO,EAAAA,EAAAA,IAAOC,EAAAA,KAAPD,CAAYE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,wGAQ5BL,EAAaE,EAAAA,GAAAA,OAAaI,IAAAA,GAAAD,EAAAA,EAAAA,GAAA,6F","sources":["components/Contactform/Contactform.js","components/Contactform/Contactform.styles.js"],"sourcesContent":["import { Formik, Field } from 'formik';\nimport { FormButton, FormContainer } from './Contactform.styles';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'components/toGetApi/toGetApi';\nimport { useNavigate } from 'react-router-dom';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.items);\n  const navigate = useNavigate();\n\n  return (\n    <div>\n      <Formik\n        initialValues={{\n          name: '',\n          number: '',\n        }}\n        onSubmit={(values, actions) => {\n          const names = contacts.map(contact => contact.name.toLowerCase());\n          const valueName = values.name;\n\n          if (names.find(name => name === valueName.toLowerCase())) {\n            alert(`${values.name} is already in contacts`);\n            return;\n          }\n\n          if (values.name === '' || values.number === '') {\n            alert(`There are empty fields`);\n            return;\n          }\n          console.log(values);\n          dispatch(addContact(values));\n          actions.resetForm();\n          navigate('/contacts');\n        }}\n      >\n        <FormContainer>\n          <label htmlFor=\"name\">Name</label>\n          <Field id=\"name\" name=\"name\" placeholder=\"Jane\" />\n\n          <label htmlFor=\"number\">Number</label>\n          <Field id=\"number\" name=\"number\" placeholder=\"000-00-00\" />\n\n          <FormButton type=\"submit\">Add contact</FormButton>\n        </FormContainer>\n      </Formik>\n    </div>\n  );\n};\nexport default ContactForm;\n","import styled from 'styled-components';\nimport { Form } from 'formik';\n\nexport const FormContainer = styled(Form)`\n  padding: 20px;\n  width: 300px;\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n\nexport const FormButton = styled.button`\n  background-color: #33ff33;\n  box-shadow: inset 0px 0px 10px rgba(0, 0, 0, 0.9);\n`;\n"],"names":["dispatch","useDispatch","contacts","useSelector","state","items","navigate","useNavigate","_jsx","children","Formik","initialValues","name","number","onSubmit","values","actions","names","map","contact","toLowerCase","valueName","find","alert","concat","console","log","addContact","resetForm","_jsxs","FormContainer","htmlFor","Field","id","placeholder","FormButton","type","styled","Form","_templateObject","_taggedTemplateLiteral","_templateObject2"],"sourceRoot":""}