{"version":3,"file":"static/js/299.22d1f520.chunk.js","mappings":"uOAEaA,EAAkBC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mE,mBCE5BC,EAAS,WACpB,IAAMC,GAASC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,QAAQH,MAAM,IAClDI,GAAWC,EAAAA,EAAAA,MACjB,OACEC,EAAAA,EAAAA,MAACX,EAAe,CAAAY,SAAA,EACdC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,2BACHC,EAAAA,EAAAA,KAAA,SACEC,KAAK,OACLC,MAAOV,EACPW,SAAU,SAAAC,GAAG,OAAIR,GAASS,EAAAA,EAAAA,IAASD,EAAIE,OAAOJ,OAAO,MAI7D,ECfaK,EAAkBnB,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mFAO3BkB,EAAoBpB,EAAAA,GAAAA,OAAaqB,IAAAA,GAAAnB,EAAAA,EAAAA,GAAA,qIAMjCoB,EAAOtB,EAAAA,GAAAA,EAAQuB,IAAAA,GAAArB,EAAAA,EAAAA,GAAA,+BCVfsB,GAAqBC,E,QAAAA,IAChC,CAJe,SAAAnB,GAAK,OAAIA,EAAMoB,SAASC,KAAM,EAChC,SAAArB,GAAK,OAAIA,EAAMC,QAAQH,MAAO,IAI3C,SAACsB,EAAUtB,GACT,OAAOsB,EAAStB,QAAO,SAAAwB,GAIrB,OAHqBA,EAAKC,KACvBC,cACAC,SAAS3B,EAAO0B,cAErB,GACF,I,UCTWE,EAAc,WACzB,IAAMxB,GAAWC,EAAAA,EAAAA,MACXwB,GAAe5B,EAAAA,EAAAA,IAAYmB,GAEjC,OACEZ,EAAAA,EAAAA,KAAA,MAAAD,SACGsB,EAAaC,KAAI,SAAAN,GAChB,OACElB,EAAAA,EAAAA,MAACS,EAAe,CAAAR,SAAA,EACdD,EAAAA,EAAAA,MAACY,EAAI,CAAAX,SAAA,CAAEiB,EAAKC,KAAK,QACjBnB,EAAAA,EAAAA,MAACY,EAAI,CAAAX,SAAA,CAAC,IAAEiB,EAAKO,WACbvB,EAAAA,EAAAA,KAACQ,EAAiB,CAChBP,KAAK,SACLuB,QAAS,kBAAM5B,GAAS6B,EAAAA,EAAAA,IAAcT,EAAKU,IAAI,EAAC3B,SACjD,qBANmBiB,EAAKU,GAW/B,KAGN,E,UCCA,EArBuB,WACrB,IAAMZ,GAAWrB,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMoB,SAASC,KAAK,IACpDY,GAAQlC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMkC,KAAKD,KAAK,IAE7C/B,GAAWC,EAAAA,EAAAA,MASjB,OAPAgC,EAAAA,EAAAA,YAAU,WACHF,GAGL/B,GAASkC,EAAAA,EAAAA,MACX,GAAG,CAAClC,EAAU+B,KAGZ7B,EAAAA,EAAAA,MAACiC,EAAAA,UAAS,CAAAhC,SAAA,EACRC,EAAAA,EAAAA,KAACgC,EAAAA,MAAK,CAAAjC,SAAC,cACPC,EAAAA,EAAAA,KAACT,EAAM,IACNuB,IAAYd,EAAAA,EAAAA,KAACoB,EAAW,MAG/B,C","sources":["components/Filter/Filter.styles.js","components/Filter/Filter.js","components/Contactlist/Contactlist.styles.js","reduxfolder/selectors.js","components/Contactlist/Contactlist.js","components/Container.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContainerFilter = styled.div`\n  padding: 10px;\n  width: 300px;\n  margin-left: 16px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { ContainerFilter } from './Filter.styles';\nimport { toFilter } from '../../reduxfolder/slice/filterSlice';\n\nexport const Filter = () => {\n  const filter = useSelector(state => state.filters.filter);\n  const dispatch = useDispatch();\n  return (\n    <ContainerFilter>\n      <p>Find contacts by name</p>\n      <input\n        type=\"text\"\n        value={filter}\n        onChange={evt => dispatch(toFilter(evt.target.value))}\n      ></input>\n    </ContainerFilter>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ContactlistList = styled.li`\n  height: 30px;\n  display: flex;\n  gap: 15px;\n  align-items: center;\n`;\n\nexport const ContactlistButton = styled.button`\n  color: #ffffff;\n  background-color: #ff0066;\n  box-shadow: -1px -1px 0px #0411f5, 0 0 1em #3900ff, 0 0 0.2em #5500ff;\n`;\n\nexport const Name = styled.p`\n  min-width: 190px;\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst contacts = state => state.contacts.items;\nconst filter = state => state.filters.filter;\n\nexport const visibleArreyFilter = createSelector(\n  [contacts, filter],\n  (contacts, filter) => {\n    return contacts.filter(item => {\n      const visibleArrey = item.name\n        .toLowerCase()\n        .includes(filter.toLowerCase());\n      return visibleArrey;\n    });\n  }\n);\n","import { useDispatch, useSelector } from 'react-redux';\nimport { ContactlistButton, ContactlistList, Name } from './Contactlist.styles';\nimport { visibleArreyFilter } from 'reduxfolder/selectors';\nimport { deleteContact } from 'components/toGetApi/toGetApi';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const visibleArrey = useSelector(visibleArreyFilter);\n\n  return (\n    <ul>\n      {visibleArrey.map(item => {\n        return (\n          <ContactlistList key={item.id}>\n            <Name>{item.name} </Name>\n            <Name> {item.number}</Name>\n            <ContactlistButton\n              type=\"button\"\n              onClick={() => dispatch(deleteContact(item.id))}\n            >\n              Delite contact\n            </ContactlistButton>\n          </ContactlistList>\n        );\n      })}\n    </ul>\n  );\n};\n","import { Container, Head2 } from './Appstyles/App.styles';\nimport { Filter } from './Filter/Filter';\nimport { ContactList } from './Contactlist/Contactlist';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from './toGetApi/toGetApi';\n\nconst PhoneContainer = () => {\n  const contacts = useSelector(state => state.contacts.items);\n  const token = useSelector(state => state.user.token);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!token) {\n      return;\n    }\n    dispatch(fetchContacts());\n  }, [dispatch, token]);\n\n  return (\n    <Container>\n      <Head2>Contacts</Head2>\n      <Filter />\n      {contacts && <ContactList />}\n    </Container>\n  );\n};\nexport default PhoneContainer;\n"],"names":["ContainerFilter","styled","_templateObject","_taggedTemplateLiteral","Filter","filter","useSelector","state","filters","dispatch","useDispatch","_jsxs","children","_jsx","type","value","onChange","evt","toFilter","target","ContactlistList","ContactlistButton","_templateObject2","Name","_templateObject3","visibleArreyFilter","createSelector","contacts","items","item","name","toLowerCase","includes","ContactList","visibleArrey","map","number","onClick","deleteContact","id","token","user","useEffect","fetchContacts","Container","Head2"],"sourceRoot":""}